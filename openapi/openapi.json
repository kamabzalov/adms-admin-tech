{
  "openapi": "3.0.1",
  "info": {
    "title": "ADMSS web API",
    "version": "0.1.2"
  },
  "paths": {
    "/api/v1/services": {
      "get": {
        "tags": ["Services"],
        "summary": "List services",
        "parameters": [
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Active",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicesOutPagedListOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/{id}": {
      "get": {
        "tags": ["Services"],
        "summary": "Get state",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the srvice",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/{uid}": {
      "get": {
        "tags": ["Services"],
        "summary": "Get service by uid.",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Unique identifier of the service.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/{id}/stop": {
      "post": {
        "tags": ["Services"],
        "summary": "Stop the service.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the service",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/{id}/start": {
      "post": {
        "tags": ["Services"],
        "summary": "Start the service.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the service to start.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/{id}/logs": {
      "get": {
        "tags": ["Services"],
        "summary": "Get logs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Service` id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogsOutPagedListOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/{id}/audit": {
      "get": {
        "tags": ["Services"],
        "summary": "Get audit records",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Service` id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogsOutPagedListOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/{id}/allerts": {
      "get": {
        "tags": ["Services"],
        "summary": "Get allerts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Service` id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllertsOutPagedListOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/{id}/counters": {
      "get": {
        "tags": ["Services"],
        "summary": "Get profiling info",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Service` id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountersOutPagedListOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Create a user.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserIn"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserIn"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserIn"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserIn"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Users"],
        "summary": "List users.",
        "parameters": [
          {
            "name": "DirectoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Suspended",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Trashed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOutPagedListOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get a user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "trashed",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Users"],
        "summary": "Update a user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserUp"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUp"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUp"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserUp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{uid}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get a user.",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Unique user identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trashed",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user": {
      "get": {
        "tags": ["Users"],
        "summary": "Get the authenticated user.",
        "parameters": [
          {
            "name": "userName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userToken",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isNew",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}/trash": {
      "post": {
        "tags": ["Users"],
        "summary": "Move a user to the trash.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the user to trash.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}/restore": {
      "post": {
        "tags": ["Users"],
        "summary": "Restore a user from the trash.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the user to restore.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/autocomplete": {
      "get": {
        "tags": ["Users"],
        "summary": "List users based on autocomplete search.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "The search phrase to use.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "top",
            "in": "query",
            "description": "Max number of items to return.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 5
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Optional app id. When set, the result contains a property indicating wheter the user is a member of the specified app or not.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutocompleteUserOutPagedListOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{uid}/tokens": {
      "post": {
        "tags": ["Users"],
        "summary": "Issue an access token for the specified user. Creates the user if it does not exists.",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Unique user identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Optional profile data to set when creating the user.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TokenUserIn"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenUserIn"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenUserIn"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TokenUserIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenOut"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Revoke all access tokens for the specified user.",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ServiceOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "uid": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "archive_url": {
            "type": "string",
            "nullable": true
          },
          "avatar_url": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_by_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created_by": {
            "$ref": "#/components/schemas/UserOut"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modified_by_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modified_by": {
            "$ref": "#/components/schemas/UserOut"
          },
          "member_count": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberOut"
            },
            "nullable": true
          },
          "is_starred": {
            "type": "boolean",
            "nullable": true
          },
          "is_trashed": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServicesOutPagedListOut": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceOut"
            },
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "end": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LogsOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "uid": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_by_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created_by": {
            "$ref": "#/components/schemas/UserOut"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "member_count": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogsOutPagedListOut": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogsOut"
            },
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "end": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AuditOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "uid": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_by_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created_by": {
            "$ref": "#/components/schemas/UserOut"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "member_count": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuditOutPagedListOut": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditOut"
            },
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "end": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CountersOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "uid": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "is_starred": {
            "type": "boolean",
            "nullable": true
          },
          "is_trashed": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountersOutPagedListOut": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountersOut"
            },
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "end": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AllertsOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "uid": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "archive_url": {
            "type": "string",
            "nullable": true
          },
          "avatar_url": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_by_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created_by": {
            "$ref": "#/components/schemas/UserOut"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modified_by_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modified_by": {
            "$ref": "#/components/schemas/UserOut"
          },
          "member_count": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberOut"
            },
            "nullable": true
          },
          "is_starred": {
            "type": "boolean",
            "nullable": true
          },
          "is_trashed": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AllertsOutPagedListOut": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllertsOut"
            },
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "end": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AutocompleteUserOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "uid": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "avatar_url": {
            "type": "string",
            "nullable": true
          },
          "is_manager": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AutocompleteUserOutPagedListOut": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AutocompleteUserOut"
            },
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "end": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Blob": {
        "required": ["media_type", "name"],
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true,
            "readOnly": true
          },
          "provider": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "link": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "download": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "embed": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "raw": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "media_type": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "BlobIn": {
        "required": ["link", "name", "provider", "size"],
        "type": "object",
        "properties": {
          "provider": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "link": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "media_type": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "download": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "embed": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "raw": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BlobOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "media_type": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "thumbnail_url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DirectoryOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "member_count": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DirectoryOutPagedListOut": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DirectoryOut"
            },
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "end": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FileIn": {
        "required": ["blob_id"],
        "type": "object",
        "properties": {
          "blob_id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "replace": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FileOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "kind": {
            "type": "string",
            "nullable": true
          },
          "media_type": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "provider": {
            "type": "string",
            "nullable": true
          },
          "download_url": {
            "type": "string",
            "nullable": true
          },
          "application_url": {
            "type": "string",
            "nullable": true
          },
          "embed_url": {
            "type": "string",
            "nullable": true
          },
          "external_url": {
            "type": "string",
            "nullable": true
          },
          "preview_format": {
            "$ref": "#/components/schemas/PreviewFormat"
          },
          "preview_url": {
            "type": "string",
            "nullable": true
          },
          "thumbnail_url": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_by_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created_by": {
            "$ref": "#/components/schemas/UserOut"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modified_by_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modified_by": {
            "$ref": "#/components/schemas/UserOut"
          },
          "comment_count": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "is_trashed": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileOutPagedListOut": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileOut"
            },
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "end": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FileUp": {
        "type": "object",
        "properties": {
          "blob_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "backup": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MemberOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "uid": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "avatar_url": {
            "type": "string",
            "nullable": true
          },
          "delivered_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "marked_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "marked_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MemberOutPagedListOut": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberOut"
            },
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "end": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PreviewFormat": {
        "enum": [
          "none",
          "audio",
          "code",
          "embed",
          "html",
          "image",
          "pdf",
          "text",
          "video"
        ],
        "type": "string"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TokenOut": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "nullable": true
          },
          "expires_in": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TokenUserIn": {
        "type": "object",
        "properties": {
          "expires_in": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "username": {
            "maxLength": 32,
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_]+$",
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "given_name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "middle_name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "name": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "family_name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nickname": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone_number": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "picture": {
            "type": "string",
            "nullable": true
          },
          "directory": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "is_suspended": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserIn": {
        "required": ["uid"],
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "username": {
            "maxLength": 32,
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_]+$",
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "given_name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "middle_name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "name": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "family_name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nickname": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone_number": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "picture": {
            "type": "string",
            "nullable": true
          },
          "directory": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "is_suspended": {
            "type": "boolean"
          },
          "is_admin": {
            "type": "boolean",
            "nullable": true
          },
          "is_manager": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "uid": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "given_name": {
            "type": "string",
            "nullable": true
          },
          "middle_name": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "family_name": {
            "type": "string",
            "nullable": true
          },
          "nickname": {
            "type": "string",
            "nullable": true
          },
          "phone_number": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "directory": {
            "$ref": "#/components/schemas/DirectoryOut"
          },
          "directory_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "picture": {
            "$ref": "#/components/schemas/BlobOut"
          },
          "picture_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "avatar_url": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "is_admin": {
            "type": "boolean",
            "nullable": true
          },
          "is_manager": {
            "type": "boolean",
            "nullable": true
          },
          "is_superuser": {
            "type": "boolean",
            "nullable": true
          },
          "is_suspended": {
            "type": "boolean",
            "nullable": true
          },
          "is_trashed": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserOutPagedListOut": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserOut"
            },
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "end": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "UserUp": {
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "username": {
            "maxLength": 32,
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_]+$",
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "given_name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "middle_name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "name": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "family_name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nickname": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone_number": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "picture": {
            "type": "string",
            "nullable": true
          },
          "directory": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "is_suspended": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
